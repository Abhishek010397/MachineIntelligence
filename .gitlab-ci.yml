stages:    
  - VALIDATING-THE-SERVER-WITH-DEPENDENCIES      
  - TEST-BLOCK-READ-SIMULATION
  - RUN-MODBUS
  - BUILD-PYTHON-DOCS


validating_server_with_python_dependencies:
  image: 2307297/py-redis:0.2
  stage: VALIDATING-THE-SERVER-WITH-DEPENDENCIES
  tags:
    - python-cicd-runners
  script:
    - chmod +x validator/validation.sh
    - ./validator/validation.sh

test_block_read_with_simulator:
  image: 2307297/py-redis:0.2
  stage: TEST-BLOCK-READ-SIMULATION
  tags:
    - python-cicd-runners
  before_script:
    - chmod +x validator/validation.sh
    - ./validator/validation.sh
    - redis-server --loadmodule /etc/redis/redistimeseries.so --daemonize yes
    - ps aux | grep redis 
    - curl "https://www.modbusdriver.com/downloads/diagslave.tgz" -o "diagslave-3.2.tgz"
    - tar xzf diagslave-3.2.tgz
    - diagslave/x86_64-linux-gnu/diagslave -m tcp &
  script:
    - export PYTHONPATH=$PYTHONPATH:/builds/i4sens/new_code/
    - python3 Simulation/Sample_Write_function.py 
    - python3 Simulation/Sample_Read.py
    - python3 Simulation/Test_Version0.01.py
  artifacts:
    paths:
      - application_name.log


run_modbus_against_simulator:
  image: 2307297/py-redis:0.2
  stage: RUN-MODBUS
  tags:
    - python-cicd-runners
  before_script:
    - chmod +x validator/validation.sh
    - ./validator/validation.sh
    - redis-server --loadmodule /etc/redis/redistimeseries.so --daemonize yes
    - ps aux | grep redis 
    - curl "https://www.modbusdriver.com/downloads/diagslave.tgz" -o "diagslave-3.2.tgz"
    - tar xzf diagslave-3.2.tgz
    - diagslave/x86_64-linux-gnu/diagslave -m tcp &
  script:
    - export PYTHONPATH=$PYTHONPATH:/builds/i4sens/new_code/
    - python3 Simulation/Sample_Write_function.py
    - python3 Modbus/ModbusPolling.py -d Sinexcel_batt_inv_01 -l ReadWriteBlock1 -l ReadWriteBlock2 -l ReadWriteBlock3
    - python3 MqTT/MqTTPub.py -c testSite_batt_inv 
  artifacts:
    paths:
      - application_name.log

build_the_documentation:
  image: docker:19.03.12
  stage: BUILD-PYTHON-DOCS
  tags:
    - docker-cicd
  script:
    - docker build -t sphinx --build-arg VERSION=$version .
    - echo "Your DOC-URL is https://sphinx-pydocs.s3.amazonaws.com/Modbus/$version/index.html"
  rules:
    - if: $DOC == 'YES'



